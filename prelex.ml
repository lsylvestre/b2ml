# 10 "prelex.mll"
  

type component = M | R | I

let component = ref M

let print oc = Printf.fprintf oc "%s"
let printc oc = Printf.fprintf oc "%c"

let keep = ref true

let maybe_print oc s = 
  Printf.fprintf oc "%s" 
    (if !keep then s else String.map (fun _ -> ' ') s)

let maybe_printc oc c = 
  Printf.fprintf oc "%c" 
    (if !keep then c else ' ')
    
let in_implementation () = keep := !component = I
let everywhere () = keep := true
let nowhere () = keep := false


# 27 "prelex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\243\255\244\255\245\255\246\255\247\255\004\000\002\000\
    \002\000\001\000\005\000\005\000\007\000\002\000\002\000\014\000\
    \003\000\000\000\255\255\005\000\002\000\002\000\000\000\024\000\
    \254\255\027\000\015\000\020\000\028\000\021\000\030\000\023\000\
    \018\000\038\000\020\000\032\000\027\000\029\000\253\255\043\000\
    \025\000\034\000\026\000\044\000\045\000\032\000\251\255\043\000\
    \052\000\042\000\046\000\037\000\056\000\038\000\050\000\045\000\
    \047\000\250\255\044\000\054\000\063\000\051\000\046\000\249\255\
    \047\000\063\000\055\000\066\000\057\000\071\000\062\000\252\255\
    \056\000\071\000\058\000\059\000\064\000\067\000\076\000\067\000\
    \064\000\080\000\067\000\069\000\068\000\080\000\085\000\073\000\
    \088\000\075\000\081\000\093\000\077\000\080\000\094\000\080\000\
    \096\000\071\000\100\000\103\000\090\000\092\000\088\000\088\000\
    \108\000\096\000\091\000\094\000\096\000\106\000\115\000\115\000\
    \106\000\114\000\101\000\103\000\122\000\115\000\111\000\106\000\
    \108\000\116\000\120\000\109\000\126\000\113\000\132\000\133\000\
    \116\000\125\000\133\000\120\000\248\255\135\000\123\000\141\000\
    \123\000\135\000\130\000\132\000\129\000\146\000\149\000\139\000\
    \121\000\138\000\138\000\150\000\138\000\156\000\138\000\150\000\
    \145\000\147\000\143\000\144\000\145\000\145\000\148\000\166\000\
    \165\000\149\000\139\000\168\000\171\000\158\000\160\000\156\000\
    \156\000\176\000\164\000\159\000\161\000\163\000\173\000\182\000\
    \182\000\173\000\181\000\168\000\183\000\171\000\171\000\184\000\
    \179\000\181\000\177\000\006\000\252\255\253\255\254\255\002\000\
    \255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\003\000\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\188\000\000\000\000\000\000\000\255\255\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\004\000\000\000\000\000\005\000\000\000\000\000\
    \189\000\000\000\000\000\190\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\018\000\000\000\000\000\000\000\000\000\017\000\
    \191\000\192\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\006\000\121\000\010\000\019\000\014\000\156\000\073\000\
    \020\000\015\000\021\000\022\000\007\000\016\000\023\000\008\000\
    \012\000\141\000\133\000\013\000\090\000\011\000\009\000\155\000\
    \088\000\076\000\064\000\026\000\025\000\024\000\041\000\027\000\
    \028\000\029\000\030\000\031\000\040\000\032\000\033\000\034\000\
    \035\000\036\000\037\000\038\000\058\000\047\000\042\000\043\000\
    \044\000\039\000\045\000\046\000\048\000\049\000\050\000\051\000\
    \052\000\053\000\054\000\055\000\056\000\057\000\059\000\060\000\
    \061\000\062\000\063\000\065\000\066\000\067\000\072\000\069\000\
    \070\000\068\000\071\000\046\000\075\000\046\000\046\000\077\000\
    \079\000\083\000\080\000\078\000\081\000\082\000\046\000\084\000\
    \085\000\086\000\087\000\074\000\063\000\089\000\046\000\091\000\
    \093\000\115\000\094\000\095\000\096\000\097\000\098\000\100\000\
    \108\000\101\000\102\000\103\000\104\000\105\000\106\000\107\000\
    \092\000\046\000\109\000\110\000\111\000\112\000\113\000\114\000\
    \046\000\116\000\099\000\117\000\118\000\119\000\120\000\063\000\
    \123\000\126\000\124\000\125\000\057\000\127\000\122\000\129\000\
    \132\000\130\000\131\000\063\000\134\000\135\000\136\000\137\000\
    \138\000\139\000\140\000\128\000\057\000\142\000\143\000\144\000\
    \145\000\146\000\147\000\148\000\149\000\150\000\151\000\152\000\
    \153\000\154\000\057\000\180\000\157\000\158\000\159\000\160\000\
    \161\000\162\000\163\000\165\000\173\000\166\000\167\000\168\000\
    \169\000\170\000\171\000\172\000\063\000\174\000\175\000\176\000\
    \177\000\178\000\179\000\063\000\181\000\182\000\164\000\183\000\
    \002\000\184\000\185\000\186\000\063\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \187\000\255\255\255\255\187\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\017\000\255\255\255\255\255\255\255\255\000\000\
    \187\000\191\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\009\000\000\000\016\000\000\000\006\000\013\000\
    \019\000\000\000\020\000\021\000\000\000\000\000\022\000\000\000\
    \000\000\007\000\008\000\000\000\010\000\000\000\000\000\006\000\
    \011\000\012\000\014\000\015\000\015\000\023\000\025\000\026\000\
    \027\000\028\000\029\000\030\000\025\000\031\000\032\000\033\000\
    \034\000\035\000\036\000\037\000\039\000\040\000\041\000\042\000\
    \043\000\025\000\044\000\045\000\047\000\048\000\049\000\050\000\
    \051\000\052\000\053\000\054\000\055\000\056\000\058\000\059\000\
    \060\000\061\000\062\000\064\000\065\000\066\000\067\000\068\000\
    \069\000\066\000\070\000\072\000\073\000\074\000\075\000\076\000\
    \077\000\078\000\079\000\077\000\080\000\081\000\082\000\083\000\
    \084\000\085\000\086\000\073\000\087\000\088\000\089\000\090\000\
    \091\000\092\000\093\000\094\000\095\000\096\000\097\000\098\000\
    \099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
    \091\000\107\000\108\000\109\000\110\000\111\000\112\000\113\000\
    \114\000\115\000\098\000\116\000\117\000\118\000\119\000\120\000\
    \121\000\122\000\123\000\124\000\125\000\126\000\121\000\127\000\
    \128\000\129\000\130\000\131\000\133\000\134\000\135\000\136\000\
    \137\000\138\000\139\000\127\000\140\000\141\000\142\000\143\000\
    \144\000\145\000\146\000\147\000\148\000\149\000\150\000\151\000\
    \152\000\153\000\154\000\155\000\156\000\157\000\158\000\159\000\
    \160\000\161\000\162\000\163\000\164\000\165\000\166\000\167\000\
    \168\000\169\000\170\000\171\000\172\000\173\000\174\000\175\000\
    \176\000\177\000\178\000\179\000\180\000\181\000\163\000\182\000\
    \000\000\183\000\184\000\185\000\186\000\255\255\187\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token oc lexbuf =
   __ocaml_lex_token_rec oc lexbuf 0
and __ocaml_lex_token_rec oc lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 36 "prelex.mll"
                         ( comment oc lexbuf ; token oc lexbuf)
# 242 "prelex.ml"

  | 1 ->
let
# 38 "prelex.mll"
               s
# 248 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 7) in
# 38 "prelex.mll"
                          ( component := M; print oc s ; token oc lexbuf)
# 252 "prelex.ml"

  | 2 ->
let
# 39 "prelex.mll"
                      s
# 258 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 14) in
# 39 "prelex.mll"
                          ( component := I; print oc s ; token oc lexbuf)
# 262 "prelex.ml"

  | 3 ->
let
# 40 "prelex.mll"
                s
# 268 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 8) in
# 40 "prelex.mll"
                          ( print oc s ; token oc lexbuf)
# 272 "prelex.ml"

  | 4 ->
let
# 48 "prelex.mll"
                          s
# 278 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 48 "prelex.mll"
                            ( everywhere (); 
                              maybe_print oc s ; 
                              token oc lexbuf )
# 284 "prelex.ml"

  | 5 ->
let
# 54 "prelex.mll"
                      s
# 290 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 54 "prelex.mll"
                            ( in_implementation (); 
                              maybe_print oc s ; 
                              token oc lexbuf)
# 296 "prelex.ml"

  | 6 ->
let
# 63 "prelex.mll"
                  s
# 302 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 63 "prelex.mll"
                            ( nowhere (); 
                              maybe_print oc s ; 
                              token oc lexbuf )
# 308 "prelex.ml"

  | 7 ->
let
# 67 "prelex.mll"
               s
# 314 "prelex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 7) in
# 67 "prelex.mll"
                            ( in_implementation (); 
                              maybe_print oc s ; 
                              token oc lexbuf )
# 320 "prelex.ml"

  | 8 ->
# 70 "prelex.mll"
                             ( token oc lexbuf)
# 325 "prelex.ml"

  | 9 ->
# 71 "prelex.mll"
                            ( printc oc '\n' ; token oc lexbuf)
# 330 "prelex.ml"

  | 10 ->
# 72 "prelex.mll"
                            ( printc oc ' ' ; token oc lexbuf)
# 335 "prelex.ml"

  | 11 ->
# 73 "prelex.mll"
                            ( if not !keep then print oc "END" ; everywhere ())
# 340 "prelex.ml"

  | 12 ->
let
# 74 "prelex.mll"
       c
# 346 "prelex.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 74 "prelex.mll"
                            ( maybe_printc oc c ; token oc lexbuf)
# 350 "prelex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec oc lexbuf __ocaml_lex_state

and comment oc lexbuf =
   __ocaml_lex_comment_rec oc lexbuf 187
and __ocaml_lex_comment_rec oc lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 78 "prelex.mll"
           ( token oc lexbuf )
# 362 "prelex.ml"

  | 1 ->
# 79 "prelex.mll"
           ( comment oc lexbuf)
# 367 "prelex.ml"

  | 2 ->
# 80 "prelex.mll"
                         (printc oc '\n'; comment oc lexbuf )
# 372 "prelex.ml"

  | 3 ->
# 81 "prelex.mll"
           ( printc oc ' ';comment oc lexbuf )
# 377 "prelex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec oc lexbuf __ocaml_lex_state

;;

